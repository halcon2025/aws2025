---
AWSTemplateFormatVersion: 2010-09-09
Description: Moodle deployment pipeline

Parameters: 
  GitS3RemoteRepoName: 
    Type: "String"
    Default: "Moodle Repo"
    Description: Moodle git-remote-s3 repo name
  GitS3RemoteRepoBucketArn: 
    Type: "String"
    Description: Moodle git-remote-s3 repo Arn
  BranchName:
    Type: "String"
    Default: "main"
    Description: Repository branch name
  AppAutoScalingGroupName:
    Type: "String"
    Description: Name of Autoscaling group for Moodle Web app.
  MoodleAppTargetGroupName:
    Type: "String"
    Description: Name of Target group attached to load balancer for web application servers.
  CodeArtifactS3BucketName:
    Type: "String"
    Description: Code Artifact S3 Bucket Name
  CodeArtifactS3BucketArn:
    Type: "String"
    Description: Code Artifact S3 Bucket ARN  
  ProjectName:
    AllowedPattern: ^([a-zA-Z0-9]*)$
    Default: App
    Description: The Moodle Project Name
    Type: String

Resources:
  # This role is assumed by the CodePipeline service itself. 
  MoodleCodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codedeploy.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole'
      Path: /
      Policies:
      - PolicyName: MoodleCodeDeployCustomPolicy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
              - ec2:CreateTags
              - ec2:RunInstances
            Resource:
              - '*'

  MoodleDeployApp:
    Type: 'AWS::CodeDeploy::Application'
    Properties:
      ApplicationName: !Sub '${ProjectName}-DeployApp'

  MoodleDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    DependsOn: MoodleDeployApp
    Properties:
      ApplicationName: !Ref MoodleDeployApp
      ServiceRoleArn: !GetAtt MoodleCodeDeployServiceRole.Arn
      DeploymentStyle:
        DeploymentOption: BLUE_GREEN #IN_PLACE
        DeploymentOption: WITH_TRAFFIC_CONTROL #WITHOUT_TRAFFIC_CONTROL
      AutoScalingGroups: 
        - !Ref AppAutoScalingGroupName
      LoadBalancerInfo:
        TargetGroupInfoList: 
          - Name: !Ref MoodleAppTargetGroupName
  
  MoodleWebAppASGNameParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub '/Moodle/${ProjectName}/WebAppASGName'
      Type: String
      Value: !Ref AppAutoScalingGroupName
      Description: SSM Parameter for Moodle WebApp Auto scaling group

  #This role is for Moodle pipeline to perform ci-cd tasks.
  MoodlePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess'
        - 'arn:aws:iam::aws:policy/AWSCodeDeployDeployerAccess'
      Path: /
      Policies:
      - PolicyName: MoodlePipelineCustomPolicy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
          - Effect: Allow
            Action:
            - codedeploy:CreateDeployment
            - codedeploy:CreateDeployment*
            - codedeploy:StopDeployment
            - codedeploy:Update*
            - codedeploy:RegisterApplicationRevision
            - codedeploy:Get*
            - codedeploy:List*
            - codedeploy:PutLifecycleEventHookExecutionStatus
            Resource:
              - arn:aws:codedeploy:*:*:application:*
              - arn:aws:codedeploy:*:*:deploymentgroup:*/*
              - arn:aws:codedeploy:*:*:instance:*
              - arn:aws:codedeploy:*:*:deploymentconfig:*
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:ListBucket
              - s3:GetBucketLocation
              - s3:PutObject
            Resource:
              - !Ref CodeArtifactS3BucketArn
              - !Join [ '', [ !Ref CodeArtifactS3BucketArn,'/*' ] ]
          - Effect: Allow
            Action: 
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:GetBucketVersioning
            - s3:ListBucket
            Resource: 
            - !Ref GitS3RemoteRepoBucketArn
            - !Sub "${GitS3RemoteRepoBucketArn}/*"

  # The CI/CD pipeline stitching the full mechanism together
  MoodleAppPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub '${ProjectName}-Pipeline'
      RoleArn: !GetAtt MoodlePipelineRole.Arn
      Stages:
        - Actions:
            # Initiate Pipeline from git-remote-s3
            - ActionTypeId: 
                Version: '1'
                Provider: S3
                Category: Source
                Owner: AWS
              OutputArtifacts:
                - Name: source
              InputArtifacts: []
              Name: source
              Configuration:
                S3Bucket: !Ref GitS3RemoteRepoName
                S3ObjectKey: !Sub ${ProjectName}/refs/heads/main/repo.zip
                PollForSourceChanges: 'false'
              RunOrder: 1
              Namespace: SourceVars
          Name: Initiate
        - Actions:
            # Creating CodeDeploy for Deploying Moodle codebase from git-remote-s3 repo
            - ActionTypeId: 
                Category: Deploy
                Owner: AWS
                Provider: CodeDeploy
                Version: "1"
              InputArtifacts:
                 - Name: source
              Name: DeployOnASG
              Configuration:
                ApplicationName: !Ref MoodleDeployApp
                DeploymentGroupName: !Ref MoodleDeploymentGroup
              RunOrder: 1
          Name: Deploy
      ArtifactStore:
        Location: !Ref CodeArtifactS3BucketName
        Type: S3
  
