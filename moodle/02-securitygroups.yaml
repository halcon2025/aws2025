---
AWSTemplateFormatVersion: 2010-09-09
Description: Moodle security groups

Parameters:
  Vpc:
    AllowedPattern: ^(vpc-)([a-z0-9]{8}|[a-z0-9]{17})$
    Description: VPC Id of an existing VPC.
    Type: AWS::EC2::VPC::Id
  DatabaseType:
    AllowedValues:
      - MySQL
      - PostgreSQL
    Default: PostgreSQL
    Description: Database engine to use.
    Type: String
  ElastiCacheType:
    AllowedValues:
      - Redis
      - Memcached
    Default: Memcached
    Description: Cache engine to use.
    Type: String

Conditions:
  UsePostgreSQL:
    !Equals [!Ref DatabaseType, PostgreSQL]
  UseRedis:
    !Equals [!Ref ElastiCacheType, Redis]

Resources:
  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Database Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          Description: "Allow database access from instances in the Web Security Group"
          FromPort: !If [ UsePostgreSQL, 5432, 3306 ]
          ToPort: !If [ UsePostgreSQL, 5432, 3306 ]
          SourceSecurityGroupId: !Ref WebSecurityGroup
      SecurityGroupEgress:
      - IpProtocol: -1
        Description: "Block all egress"
        CidrIp: 127.0.0.1/32
      VpcId: !Ref Vpc

  ElastiCacheSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Cache Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          Description: "Allow cache engine access from instances in the Web Security Group"
          FromPort: !If [ UseRedis, 6379, 11211 ]
          ToPort: !If [ UseRedis, 6379, 11211 ]
          SourceSecurityGroupId: !Ref WebSecurityGroup
      SecurityGroupEgress:
      - IpProtocol: -1
        Description: "Block all egress"
        CidrIp: 127.0.0.1/32
      VpcId: !Ref Vpc

  EfsSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: EFS Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          Description: "Allow NFS access from instances in the Web Security Group"
          FromPort: 2049
          ToPort: 2049
          SourceSecurityGroupId: !Ref WebSecurityGroup
      SecurityGroupEgress:
      - IpProtocol: -1
        Description: "Block all egress"
        CidrIp: 127.0.0.1/32
      VpcId: !Ref Vpc

  EfsSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: "Allow NFS access from instances in EFS Security Group"
      FromPort: 2049
      ToPort: 2049
      SourceSecurityGroupId: !GetAtt EfsSecurityGroup.GroupId
      GroupId: !GetAtt EfsSecurityGroup.GroupId

  PublicAlbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Load balancer Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          Description: "Allow https access from everywhere"
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          Description: "Allow http access from everywhere"
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: -1
        Description: "Block all egress"
        CidrIp: 127.0.0.1/32
      VpcId: !Ref Vpc       

  PublicAlbSecurityGroupEgressHttp:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      IpProtocol: tcp
      Description: "Allow http access to Web security group"
      FromPort: 80
      ToPort: 80
      DestinationSecurityGroupId: !GetAtt WebSecurityGroup.GroupId
      GroupId: !GetAtt PublicAlbSecurityGroup.GroupId

  PublicAlbSecurityGroupEgressHttps:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      IpProtocol: tcp
      Description: "Allow http access to Web security group"
      FromPort: 443
      ToPort: 443
      DestinationSecurityGroupId: !GetAtt WebSecurityGroup.GroupId
      GroupId: !GetAtt PublicAlbSecurityGroup.GroupId

  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Web instances Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          Description: "Allow http access from load balancer Security Group"
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref PublicAlbSecurityGroup
        - IpProtocol: tcp
          Description: "Allow https access from load balancer Security Group"
          FromPort: 443
          ToPort: 443
          SourceSecurityGroupId: !Ref PublicAlbSecurityGroup
      SecurityGroupEgress:
        - IpProtocol: "-1"
          Description: "Allow outgoing access from web instances to Internet (download packages, updates)"
          CidrIp: 0.0.0.0/0
      VpcId: !Ref Vpc

Outputs:
  DatabaseSecurityGroup:
    Value: !Ref DatabaseSecurityGroup
  EfsSecurityGroup:
    Value: !Ref EfsSecurityGroup
  ElastiCacheSecurityGroup:
    Value: !Ref ElastiCacheSecurityGroup
  PublicAlbSecurityGroup:
    Value: !Ref PublicAlbSecurityGroup
  WebSecurityGroup:
    Value: !Ref WebSecurityGroup
