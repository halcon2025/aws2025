---
AWSTemplateFormatVersion: 2010-09-09
Description: Moodle database

Parameters:
  DatabaseType:
    AllowedValues:
      - MySQL
      - PostgreSQL
    Default: PostgreSQL
    Description: Database engine to use.
    Type: String
  DatabaseCmk:
    Description: AWS KMS Customer Master Key (CMK) to encrypt database cluster
    Type: String
  DatabaseInstanceType:
    AllowedValues:
      - db.t3.medium
      - db.t3.large
      - db.t4g.medium
      - db.t4g.large
      - db.r5.large
      - db.r5.xlarge
      - db.r5.2xlarge
      - db.r5.4xlarge
      - db.r5.8xlarge
      - db.r5.12xlarge
      - db.r5.16xlarge
      - db.r6g.large
      - db.r6g.xlarge
      - db.r6g.2xlarge
      - db.r6g.4xlarge
      - db.r6g.8xlarge
      - db.r6g.12xlarge
      - db.r6g.16xlarge
      - db.r6i.large
      - db.r6i.xlarge
      - db.r6i.2xlarge
      - db.r6i.4xlarge
      - db.r6i.8xlarge
      - db.r6i.12xlarge
      - db.r6i.16xlarge
      - db.r6i.24xlarge
      - db.r6i.32xlarge
      - db.r6gd.xlarge
      - db.r6gd.2xlarge
      - db.r6gd.4xlarge
      - db.r6gd.8xlarge
      - db.r6gd.12xlarge
      - db.r6gd.16xlarge
    ConstraintDescription: Must be a valid Aurora RDS instance type.
    Default: db.r6g.large
    Description: Amazon Aurora RDS database instance type
    Type: String
  RDSInstanceSecretArn:
    Type: String
  DatabaseName:
    AllowedPattern: ^([a-zA-Z0-9]*)$
    Description: Amazon Aurora RDS master database name
    Type: String
  DatabaseSecurityGroup:
    Description: Database security group
    Type: AWS::EC2::SecurityGroup::Id
  NumberOfSubnets:
    AllowedValues:
    - 1
    - 2
    - 3
    Default: 2
    Description: Number of subnets. This must match your selections in the list of subnets below.
    Type: String
  Subnet:
    Description: Select existing subnets. The number selected must match the number of subnets above. Subnets selected must be in separate AZs.
    Type: List<AWS::EC2::Subnet::Id>
  ProjectName:
    AllowedPattern: ^([a-zA-Z0-9]*)$
    Default: App
    Description: Moodle Project Name
    Type: String

Conditions:
  UseMySQL: !Equals [!Ref DatabaseType, MySQL]
  UsePostgreSQL: !Equals [!Ref DatabaseType, PostgreSQL]
  NumberOfSubnets1: !Equals [ 1, !Ref NumberOfSubnets ]
  NumberOfSubnets2: !Equals [ 2, !Ref NumberOfSubnets ]
  UseAWS-ManagedCMK: !Equals ['', !Ref DatabaseCmk]

Resources:
  DatabaseCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      BackupRetentionPeriod: 30
      DatabaseName: !Ref DatabaseName
      DBSubnetGroupName: !Ref DataSubnetGroup
      PubliclyAccessible: false
      Engine: !If [ UsePostgreSQL, aurora-postgresql, aurora-mysql ]
      KmsKeyId: !If [ UseAWS-ManagedCMK, !Ref 'AWS::NoValue', !Ref DatabaseCmk ]
      MasterUsername: !Join ['', ['{{resolve:secretsmanager:', !Ref RDSInstanceSecretArn, ':SecretString:username}}' ]]
      MasterUserPassword: !Join ['', ['{{resolve:secretsmanager:', !Ref RDSInstanceSecretArn, ':SecretString:password}}' ]]
      Port: !If [ UsePostgreSQL, 5432, 3306 ]
      StorageEncrypted: true
      VpcSecurityGroupIds:
      - !Ref DatabaseSecurityGroup

  DatabaseInstance0:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    Properties:
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      PubliclyAccessible: false
      DBClusterIdentifier: !Ref DatabaseCluster
      DBInstanceClass: !Ref DatabaseInstanceType
      DBSubnetGroupName: !Ref DataSubnetGroup
      Engine: !If [ UsePostgreSQL, aurora-postgresql, aurora-mysql ]

  DatabaseInstance1:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    Properties:
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      PubliclyAccessible: false
      DBClusterIdentifier: !Ref DatabaseCluster
      DBInstanceClass: !Ref DatabaseInstanceType
      DBSubnetGroupName: !Ref DataSubnetGroup
      Engine: !If [ UsePostgreSQL, aurora-postgresql, aurora-mysql ]

  DataSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: RDS Database Subnet Group for Moodle
      SubnetIds: !If [ NumberOfSubnets1, [ !Select [ 0, !Ref Subnet ] ],
        !If [ NumberOfSubnets2, [ !Select [ 0, !Ref Subnet ], !Select [ 1, !Ref Subnet ] ],
        [ !Select [ 0, !Ref Subnet ], !Select [ 1, !Ref Subnet ], !Select [ 2, !Ref Subnet ] ] ] ]

  DatabaseClusterParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join [ '', [ '/Moodle/',!Ref ProjectName, '/DB/ClusterEndpoint' ] ]
      Type: String
      Value: !GetAtt DatabaseCluster.Endpoint.Address
      Description: Moodle DB Cluster

  DatabaseClusterReadOnlyParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join [ '', [ '/Moodle/',!Ref ProjectName, '/DB/ClusterReadOnlyEndpoint' ] ]
      Type: String
      Value: !GetAtt DatabaseCluster.ReadEndpoint.Address
      Description: Moodle DB Cluster Read only

  DatabaseNameParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join [ '', [ '/Moodle/',!Ref ProjectName, '/DB/Name' ] ]
      Type: String
      Value: !Ref DatabaseName
      Description: Moodle DB Name

  DatabaseTypeParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Join [ '', [ '/Moodle/',!Ref ProjectName, '/DB/Type' ] ]
      Type: String
      Value: !Ref DatabaseType
      Description: Moodle DB Type

Outputs:
  Database:
    Value: !Ref DatabaseCluster
  DatabaseName:
    Value: !Ref DatabaseName
  DatabaseInstance0:
    Value: !Ref DatabaseInstance0
  DatabaseInstance1:
    Value: !Ref DatabaseInstance1
  DataSubnetGroup:
    Value: !Ref DataSubnetGroup
  DatabaseClusterEndpointAddress:
    Value: !GetAtt DatabaseCluster.Endpoint.Address
  DatabaseClusterEndpointPort:
    Value: !GetAtt DatabaseCluster.Endpoint.Port
  DatabaseClusterReadEndpointAddress:
    Value: !GetAtt DatabaseCluster.ReadEndpoint.Address  
